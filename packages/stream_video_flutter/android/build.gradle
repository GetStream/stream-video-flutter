plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-parcelize"
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://central.sonatype.com/repository/maven-snapshots/"
        }
    }
}

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'io.getstream.video.flutter.stream_video_flutter'
    }

    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 19
    }

    dependencies {
        implementation 'io.getstream:stream-log:1.3.4'
        implementation 'com.squareup.picasso:picasso:2.71828'
        implementation 'androidx.core:core:1.16.0'
        implementation 'androidx.media:media:1.7.0'
        implementation 'androidx.appcompat:appcompat:1.7.0'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'
        implementation "io.github.crow-misia.libyuv:libyuv-android:0.43.0"
        implementation "androidx.annotation:annotation:1.9.0"
        implementation 'com.google.mlkit:segmentation-selfie:16.0.0-beta6'
        implementation("io.getstream:stream-webrtc-android:1.3.7-stream-renamed-SNAPSHOT")
        implementation "com.github.android:renderscript-intrinsics-replacement-toolkit:344be3f6bf03fb"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
