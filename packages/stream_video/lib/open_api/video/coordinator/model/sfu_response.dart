// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class SFUResponse {
  const SFUResponse({
    required this.edgeName,
    required this.url,
    required this.wsEndpoint,
  });

  final String edgeName;

  final String url;

  final String wsEndpoint;

  Map<String, dynamic> toJson() {
    return {
      'edge_name': edgeName,
      'url': url,
      'ws_endpoint': wsEndpoint,
    };
  }

  static SFUResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return SFUResponse(
        edgeName: mapValueOfType<String>(json, r'edge_name')!,
        url: mapValueOfType<String>(json, r'url')!,
        wsEndpoint: mapValueOfType<String>(json, r'ws_endpoint')!,
      );
    }
    return null;
  }

  static List<SFUResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <SFUResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = SFUResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'SFUResponse('
        'edgeName: $edgeName, '
        'url: $url, '
        'wsEndpoint: $wsEndpoint, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is SFUResponse &&
        other.edgeName == edgeName &&
        other.url == url &&
        other.wsEndpoint == wsEndpoint;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      edgeName,
      url,
      wsEndpoint,
    ]);
  }
}
