// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

enum OwnCapability {
  blockUsers('block-users'),
  changeMaxDuration('change-max-duration'),
  createCall('create-call'),
  createReaction('create-reaction'),
  enableNoiseCancellation('enable-noise-cancellation'),
  endCall('end-call'),
  joinBackstage('join-backstage'),
  joinCall('join-call'),
  joinEndedCall('join-ended-call'),
  muteUsers('mute-users'),
  pinForEveryone('pin-for-everyone'),
  readCall('read-call'),
  removeCallMember('remove-call-member'),
  screenshare('screenshare'),
  sendAudio('send-audio'),
  sendVideo('send-video'),
  startBroadcastCall('start-broadcast-call'),
  startClosedCaptionsCall('start-closed-captions-call'),
  startFrameRecordCall('start-frame-record-call'),
  startRecordCall('start-record-call'),
  startTranscriptionCall('start-transcription-call'),
  stopBroadcastCall('stop-broadcast-call'),
  stopClosedCaptionsCall('stop-closed-captions-call'),
  stopFrameRecordCall('stop-frame-record-call'),
  stopRecordCall('stop-record-call'),
  stopTranscriptionCall('stop-transcription-call'),
  updateCall('update-call'),
  updateCallMember('update-call-member'),
  updateCallPermissions('update-call-permissions'),
  updateCallSettings('update-call-settings'),
  ;

  const OwnCapability(this.value);
  final String value;

  static OwnCapability fromJson(String json) {
    switch (json) {
      case 'block-users':
        return OwnCapability.blockUsers;
      case 'change-max-duration':
        return OwnCapability.changeMaxDuration;
      case 'create-call':
        return OwnCapability.createCall;
      case 'create-reaction':
        return OwnCapability.createReaction;
      case 'enable-noise-cancellation':
        return OwnCapability.enableNoiseCancellation;
      case 'end-call':
        return OwnCapability.endCall;
      case 'join-backstage':
        return OwnCapability.joinBackstage;
      case 'join-call':
        return OwnCapability.joinCall;
      case 'join-ended-call':
        return OwnCapability.joinEndedCall;
      case 'mute-users':
        return OwnCapability.muteUsers;
      case 'pin-for-everyone':
        return OwnCapability.pinForEveryone;
      case 'read-call':
        return OwnCapability.readCall;
      case 'remove-call-member':
        return OwnCapability.removeCallMember;
      case 'screenshare':
        return OwnCapability.screenshare;
      case 'send-audio':
        return OwnCapability.sendAudio;
      case 'send-video':
        return OwnCapability.sendVideo;
      case 'start-broadcast-call':
        return OwnCapability.startBroadcastCall;
      case 'start-closed-captions-call':
        return OwnCapability.startClosedCaptionsCall;
      case 'start-frame-record-call':
        return OwnCapability.startFrameRecordCall;
      case 'start-record-call':
        return OwnCapability.startRecordCall;
      case 'start-transcription-call':
        return OwnCapability.startTranscriptionCall;
      case 'stop-broadcast-call':
        return OwnCapability.stopBroadcastCall;
      case 'stop-closed-captions-call':
        return OwnCapability.stopClosedCaptionsCall;
      case 'stop-frame-record-call':
        return OwnCapability.stopFrameRecordCall;
      case 'stop-record-call':
        return OwnCapability.stopRecordCall;
      case 'stop-transcription-call':
        return OwnCapability.stopTranscriptionCall;
      case 'update-call':
        return OwnCapability.updateCall;
      case 'update-call-member':
        return OwnCapability.updateCallMember;
      case 'update-call-permissions':
        return OwnCapability.updateCallPermissions;
      case 'update-call-settings':
        return OwnCapability.updateCallSettings;

      default:
        throw ArgumentError('Unknown OwnCapability value: $json');
    }
  }

  static List<OwnCapability> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <OwnCapability>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        result.add(OwnCapability.fromJson(row));
      }
    }
    return result.toList(growable: growable);
  }

  String toJson() => value;

  @override
  String toString() => value;
}
