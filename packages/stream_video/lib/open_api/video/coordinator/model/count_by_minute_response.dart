// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class CountByMinuteResponse {
  const CountByMinuteResponse({
    required this.count,
    required this.startTs,
  });

  final int count;

  final DateTime startTs;

  Map<String, dynamic> toJson() {
    return {
      'count': count,
      'start_ts': startTs,
    };
  }

  static CountByMinuteResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return CountByMinuteResponse(
        count: mapValueOfType<int>(json, r'count')!,
        startTs: mapValueOfType<DateTime>(json, r'start_ts')!,
      );
    }
    return null;
  }

  static List<CountByMinuteResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <CountByMinuteResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = CountByMinuteResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'CountByMinuteResponse('
        'count: $count, '
        'startTs: $startTs, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is CountByMinuteResponse &&
        other.count == count &&
        other.startTs == startTs;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      count,
      startTs,
    ]);
  }
}
