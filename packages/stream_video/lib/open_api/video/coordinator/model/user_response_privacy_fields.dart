// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class UserResponsePrivacyFields {
  const UserResponsePrivacyFields({
    required this.blockedUserIds,
    required this.createdAt,
    required this.custom,
    this.deactivatedAt,
    this.deletedAt,
    required this.id,
    this.image,
    this.invisible,
    required this.language,
    this.lastActive,
    this.name,
    this.revokeTokensIssuedBefore,
    required this.role,
    required this.teams,
    this.teamsRole,
    required this.updatedAt,
  });

  final List<String> blockedUserIds;

  final DateTime createdAt;

  final Map<String, Object> custom;

  final DateTime? deactivatedAt;

  final DateTime? deletedAt;

  final String id;

  final String? image;

  final bool? invisible;

  final String language;

  final DateTime? lastActive;

  final String? name;

  final DateTime? revokeTokensIssuedBefore;

  final String role;

  final List<String> teams;

  final Map<String, String>? teamsRole;

  final DateTime updatedAt;

  Map<String, dynamic> toJson() {
    return {
      'blocked_user_ids': blockedUserIds,
      'created_at': createdAt,
      'custom': custom,
      'deactivated_at': deactivatedAt,
      'deleted_at': deletedAt,
      'id': id,
      'image': image,
      'invisible': invisible,
      'language': language,
      'last_active': lastActive,
      'name': name,
      'revoke_tokens_issued_before': revokeTokensIssuedBefore,
      'role': role,
      'teams': teams,
      'teams_role': teamsRole,
      'updated_at': updatedAt,
    };
  }

  static UserResponsePrivacyFields? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return UserResponsePrivacyFields(
        blockedUserIds: json[r'blocked_user_ids'] is Iterable
            ? (json[r'blocked_user_ids'] as Iterable)
                .cast<String>()
                .toList(growable: false)
            : const []!,
        createdAt: mapValueOfType<DateTime>(json, r'created_at')!,
        custom: mapCastOfType<String, Object>(json, r'custom')!,
        deactivatedAt: mapValueOfType<DateTime?>(json, r'deactivated_at', null),
        deletedAt: mapValueOfType<DateTime?>(json, r'deleted_at', null),
        id: mapValueOfType<String>(json, r'id')!,
        image: mapValueOfType<String?>(json, r'image', null),
        invisible: mapValueOfType<bool?>(json, r'invisible', null),
        language: mapValueOfType<String>(json, r'language')!,
        lastActive: mapValueOfType<DateTime?>(json, r'last_active', null),
        name: mapValueOfType<String?>(json, r'name', null),
        revokeTokensIssuedBefore: mapValueOfType<DateTime?>(
            json, r'revoke_tokens_issued_before', null),
        role: mapValueOfType<String>(json, r'role')!,
        teams: json[r'teams'] is Iterable
            ? (json[r'teams'] as Iterable)
                .cast<String>()
                .toList(growable: false)
            : const []!,
        teamsRole: mapCastOfType<String, String>(json, r'teams_role'),
        updatedAt: mapValueOfType<DateTime>(json, r'updated_at')!,
      );
    }
    return null;
  }

  static List<UserResponsePrivacyFields> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <UserResponsePrivacyFields>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = UserResponsePrivacyFields.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'UserResponsePrivacyFields('
        'blockedUserIds: $blockedUserIds, '
        'createdAt: $createdAt, '
        'custom: $custom, '
        'deactivatedAt: $deactivatedAt, '
        'deletedAt: $deletedAt, '
        'id: $id, '
        'image: $image, '
        'invisible: $invisible, '
        'language: $language, '
        'lastActive: $lastActive, '
        'name: $name, '
        'revokeTokensIssuedBefore: $revokeTokensIssuedBefore, '
        'role: $role, '
        'teams: $teams, '
        'teamsRole: $teamsRole, '
        'updatedAt: $updatedAt, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is UserResponsePrivacyFields &&
        other.blockedUserIds == blockedUserIds &&
        other.createdAt == createdAt &&
        other.custom == custom &&
        other.deactivatedAt == deactivatedAt &&
        other.deletedAt == deletedAt &&
        other.id == id &&
        other.image == image &&
        other.invisible == invisible &&
        other.language == language &&
        other.lastActive == lastActive &&
        other.name == name &&
        other.revokeTokensIssuedBefore == revokeTokensIssuedBefore &&
        other.role == role &&
        other.teams == teams &&
        other.teamsRole == teamsRole &&
        other.updatedAt == updatedAt;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      blockedUserIds,
      createdAt,
      custom,
      deactivatedAt,
      deletedAt,
      id,
      image,
      invisible,
      language,
      lastActive,
      name,
      revokeTokensIssuedBefore,
      role,
      teams,
      teamsRole,
      updatedAt,
    ]);
  }
}
