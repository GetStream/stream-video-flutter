// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class DeleteCallResponse {
  const DeleteCallResponse({
    required this.call,
    required this.duration,
    this.taskId,
  });

  final CallResponse call;

  final String duration;

  final String? taskId;

  Map<String, dynamic> toJson() {
    return {
      'call': call,
      'duration': duration,
      'task_id': taskId,
    };
  }

  static DeleteCallResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return DeleteCallResponse(
        call: CallResponse.fromJson(json[r'call'])!,
        duration: mapValueOfType<String>(json, r'duration')!,
        taskId: mapValueOfType<String?>(json, r'task_id', null),
      );
    }
    return null;
  }

  static List<DeleteCallResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <DeleteCallResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = DeleteCallResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'DeleteCallResponse('
        'call: $call, '
        'duration: $duration, '
        'taskId: $taskId, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is DeleteCallResponse &&
        other.call == call &&
        other.duration == duration &&
        other.taskId == taskId;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      call,
      duration,
      taskId,
    ]);
  }
}
