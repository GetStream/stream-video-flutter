// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class StopLiveRequest {
  const StopLiveRequest({
    this.continueClosedCaption,
    this.continueHls,
    this.continueRecording,
    this.continueRtmpBroadcasts,
    this.continueTranscription,
  });

  final bool? continueClosedCaption;

  final bool? continueHls;

  final bool? continueRecording;

  final bool? continueRtmpBroadcasts;

  final bool? continueTranscription;

  Map<String, dynamic> toJson() {
    return {
      'continue_closed_caption': continueClosedCaption,
      'continue_hls': continueHls,
      'continue_recording': continueRecording,
      'continue_rtmp_broadcasts': continueRtmpBroadcasts,
      'continue_transcription': continueTranscription,
    };
  }

  static StopLiveRequest? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return StopLiveRequest(
        continueClosedCaption:
            mapValueOfType<bool?>(json, r'continue_closed_caption', null),
        continueHls: mapValueOfType<bool?>(json, r'continue_hls', null),
        continueRecording:
            mapValueOfType<bool?>(json, r'continue_recording', null),
        continueRtmpBroadcasts:
            mapValueOfType<bool?>(json, r'continue_rtmp_broadcasts', null),
        continueTranscription:
            mapValueOfType<bool?>(json, r'continue_transcription', null),
      );
    }
    return null;
  }

  static List<StopLiveRequest> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <StopLiveRequest>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = StopLiveRequest.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'StopLiveRequest('
        'continueClosedCaption: $continueClosedCaption, '
        'continueHls: $continueHls, '
        'continueRecording: $continueRecording, '
        'continueRtmpBroadcasts: $continueRtmpBroadcasts, '
        'continueTranscription: $continueTranscription, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is StopLiveRequest &&
        other.continueClosedCaption == continueClosedCaption &&
        other.continueHls == continueHls &&
        other.continueRecording == continueRecording &&
        other.continueRtmpBroadcasts == continueRtmpBroadcasts &&
        other.continueTranscription == continueTranscription;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      continueClosedCaption,
      continueHls,
      continueRecording,
      continueRtmpBroadcasts,
      continueTranscription,
    ]);
  }
}
