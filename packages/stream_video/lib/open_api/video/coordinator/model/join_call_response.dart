// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class JoinCallResponse {
  const JoinCallResponse({
    required this.call,
    required this.created,
    required this.credentials,
    required this.duration,
    required this.members,
    this.membership,
    required this.ownCapabilities,
    required this.statsOptions,
  });

  final CallResponse call;

  final bool created;

  final Credentials credentials;

  final String duration;

  final List<MemberResponse> members;

  final MemberResponse? membership;

  final List<OwnCapability> ownCapabilities;

  final StatsOptions statsOptions;

  Map<String, dynamic> toJson() {
    return {
      'call': call,
      'created': created,
      'credentials': credentials,
      'duration': duration,
      'members': members,
      'membership': membership,
      'own_capabilities': ownCapabilities,
      'stats_options': statsOptions,
    };
  }

  static JoinCallResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return JoinCallResponse(
        call: CallResponse.fromJson(json[r'call'])!,
        created: mapValueOfType<bool>(json, r'created')!,
        credentials: Credentials.fromJson(json[r'credentials'])!,
        duration: mapValueOfType<String>(json, r'duration')!,
        members: MemberResponse.listFromJson(json[r'members'])!,
        membership: MemberResponse?.fromJson(json[r'membership'] ?? null),
        ownCapabilities: OwnCapability.listFromJson(json[r'own_capabilities'])!,
        statsOptions: StatsOptions.fromJson(json[r'stats_options'])!,
      );
    }
    return null;
  }

  static List<JoinCallResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <JoinCallResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = JoinCallResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'JoinCallResponse('
        'call: $call, '
        'created: $created, '
        'credentials: $credentials, '
        'duration: $duration, '
        'members: $members, '
        'membership: $membership, '
        'ownCapabilities: $ownCapabilities, '
        'statsOptions: $statsOptions, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is JoinCallResponse &&
        other.call == call &&
        other.created == created &&
        other.credentials == credentials &&
        other.duration == duration &&
        other.members == members &&
        other.membership == membership &&
        other.ownCapabilities == ownCapabilities &&
        other.statsOptions == statsOptions;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      call,
      created,
      credentials,
      duration,
      members,
      membership,
      ownCapabilities,
      statsOptions,
    ]);
  }
}
