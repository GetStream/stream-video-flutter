// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class ReportResponse {
  const ReportResponse({
    required this.call,
    required this.participants,
    required this.userRatings,
  });

  final CallReportResponse call;

  final ParticipantReportResponse participants;

  final UserRatingReportResponse userRatings;

  Map<String, dynamic> toJson() {
    return {
      'call': call,
      'participants': participants,
      'user_ratings': userRatings,
    };
  }

  static ReportResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return ReportResponse(
        call: CallReportResponse.fromJson(json[r'call'])!,
        participants:
            ParticipantReportResponse.fromJson(json[r'participants'])!,
        userRatings: UserRatingReportResponse.fromJson(json[r'user_ratings'])!,
      );
    }
    return null;
  }

  static List<ReportResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <ReportResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = ReportResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'ReportResponse('
        'call: $call, '
        'participants: $participants, '
        'userRatings: $userRatings, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ReportResponse &&
        other.call == call &&
        other.participants == participants &&
        other.userRatings == userRatings;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      call,
      participants,
      userRatings,
    ]);
  }
}
