// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

enum CreateDeviceRequestPushProviderEnum {
  apn('apn'),
  firebase('firebase'),
  huawei('huawei'),
  xiaomi('xiaomi'),
  unknown('_unknown');

  const CreateDeviceRequestPushProviderEnum(this.value);
  final String value;

  static CreateDeviceRequestPushProviderEnum? fromValue(String? json) {
    switch (json) {
      case null:
        return null;
      case 'apn':
        return CreateDeviceRequestPushProviderEnum.apn;
      case 'firebase':
        return CreateDeviceRequestPushProviderEnum.firebase;
      case 'huawei':
        return CreateDeviceRequestPushProviderEnum.huawei;
      case 'xiaomi':
        return CreateDeviceRequestPushProviderEnum.xiaomi;
      default:
        return CreateDeviceRequestPushProviderEnum.unknown;
    }
  }
}

@immutable
class CreateDeviceRequest {
  const CreateDeviceRequest({
    required this.id,
    required this.pushProvider,
    this.pushProviderName,
    this.voipToken,
  });

  final String id;

  final CreateDeviceRequestPushProviderEnum pushProvider;

  final String? pushProviderName;

  final bool? voipToken;

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'push_provider': pushProvider,
      'push_provider_name': pushProviderName,
      'voip_token': voipToken,
    };
  }

  static CreateDeviceRequest? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return CreateDeviceRequest(
        id: mapValueOfType<String>(json, r'id')!,
        pushProvider: CreateDeviceRequestPushProviderEnum.fromValue(
            json['push_provider'])!,
        pushProviderName:
            mapValueOfType<String?>(json, r'push_provider_name', null),
        voipToken: mapValueOfType<bool?>(json, r'voip_token', null),
      );
    }
    return null;
  }

  static List<CreateDeviceRequest> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <CreateDeviceRequest>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = CreateDeviceRequest.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'CreateDeviceRequest('
        'id: $id, '
        'pushProvider: $pushProvider, '
        'pushProviderName: $pushProviderName, '
        'voipToken: $voipToken, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is CreateDeviceRequest &&
        other.id == id &&
        other.pushProvider == pushProvider &&
        other.pushProviderName == pushProviderName &&
        other.voipToken == voipToken;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      id,
      pushProvider,
      pushProviderName,
      voipToken,
    ]);
  }
}
