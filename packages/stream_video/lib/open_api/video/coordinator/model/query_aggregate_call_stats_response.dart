// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class QueryAggregateCallStatsResponse {
  const QueryAggregateCallStatsResponse({
    this.callDurationReport,
    this.callParticipantCountReport,
    this.callsPerDayReport,
    required this.duration,
    this.networkMetricsReport,
    this.qualityScoreReport,
    this.sdkUsageReport,
    this.userFeedbackReport,
  });

  final CallDurationReportResponse? callDurationReport;

  final CallParticipantCountReportResponse? callParticipantCountReport;

  final CallsPerDayReportResponse? callsPerDayReport;

  final String duration;

  final NetworkMetricsReportResponse? networkMetricsReport;

  final QualityScoreReportResponse? qualityScoreReport;

  final SDKUsageReportResponse? sdkUsageReport;

  final UserFeedbackReportResponse? userFeedbackReport;

  Map<String, dynamic> toJson() {
    return {
      'call_duration_report': callDurationReport,
      'call_participant_count_report': callParticipantCountReport,
      'calls_per_day_report': callsPerDayReport,
      'duration': duration,
      'network_metrics_report': networkMetricsReport,
      'quality_score_report': qualityScoreReport,
      'sdk_usage_report': sdkUsageReport,
      'user_feedback_report': userFeedbackReport,
    };
  }

  static QueryAggregateCallStatsResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return QueryAggregateCallStatsResponse(
        callDurationReport: CallDurationReportResponse?.fromJson(
            json[r'call_duration_report'] ?? null),
        callParticipantCountReport:
            CallParticipantCountReportResponse?.fromJson(
                json[r'call_participant_count_report'] ?? null),
        callsPerDayReport: CallsPerDayReportResponse?.fromJson(
            json[r'calls_per_day_report'] ?? null),
        duration: mapValueOfType<String>(json, r'duration')!,
        networkMetricsReport: NetworkMetricsReportResponse?.fromJson(
            json[r'network_metrics_report'] ?? null),
        qualityScoreReport: QualityScoreReportResponse?.fromJson(
            json[r'quality_score_report'] ?? null),
        sdkUsageReport:
            SDKUsageReportResponse?.fromJson(json[r'sdk_usage_report'] ?? null),
        userFeedbackReport: UserFeedbackReportResponse?.fromJson(
            json[r'user_feedback_report'] ?? null),
      );
    }
    return null;
  }

  static List<QueryAggregateCallStatsResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <QueryAggregateCallStatsResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = QueryAggregateCallStatsResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'QueryAggregateCallStatsResponse('
        'callDurationReport: $callDurationReport, '
        'callParticipantCountReport: $callParticipantCountReport, '
        'callsPerDayReport: $callsPerDayReport, '
        'duration: $duration, '
        'networkMetricsReport: $networkMetricsReport, '
        'qualityScoreReport: $qualityScoreReport, '
        'sdkUsageReport: $sdkUsageReport, '
        'userFeedbackReport: $userFeedbackReport, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is QueryAggregateCallStatsResponse &&
        other.callDurationReport == callDurationReport &&
        other.callParticipantCountReport == callParticipantCountReport &&
        other.callsPerDayReport == callsPerDayReport &&
        other.duration == duration &&
        other.networkMetricsReport == networkMetricsReport &&
        other.qualityScoreReport == qualityScoreReport &&
        other.sdkUsageReport == sdkUsageReport &&
        other.userFeedbackReport == userFeedbackReport;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      callDurationReport,
      callParticipantCountReport,
      callsPerDayReport,
      duration,
      networkMetricsReport,
      qualityScoreReport,
      sdkUsageReport,
      userFeedbackReport,
    ]);
  }
}
