// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class CallStatsReportSummaryResponse {
  const CallStatsReportSummaryResponse({
    required this.callCid,
    required this.callDurationSeconds,
    required this.callSessionId,
    required this.callStatus,
    this.createdAt,
    required this.firstStatsTime,
    this.minUserRating,
    this.qualityScore,
  });

  final String callCid;

  final int callDurationSeconds;

  final String callSessionId;

  final String callStatus;

  final DateTime? createdAt;

  final DateTime firstStatsTime;

  final int? minUserRating;

  final int? qualityScore;

  Map<String, dynamic> toJson() {
    return {
      'call_cid': callCid,
      'call_duration_seconds': callDurationSeconds,
      'call_session_id': callSessionId,
      'call_status': callStatus,
      'created_at': createdAt,
      'first_stats_time': firstStatsTime,
      'min_user_rating': minUserRating,
      'quality_score': qualityScore,
    };
  }

  static CallStatsReportSummaryResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return CallStatsReportSummaryResponse(
        callCid: mapValueOfType<String>(json, r'call_cid')!,
        callDurationSeconds:
            mapValueOfType<int>(json, r'call_duration_seconds')!,
        callSessionId: mapValueOfType<String>(json, r'call_session_id')!,
        callStatus: mapValueOfType<String>(json, r'call_status')!,
        createdAt: mapValueOfType<DateTime?>(json, r'created_at', null),
        firstStatsTime: mapValueOfType<DateTime>(json, r'first_stats_time')!,
        minUserRating: mapValueOfType<int?>(json, r'min_user_rating', null),
        qualityScore: mapValueOfType<int?>(json, r'quality_score', null),
      );
    }
    return null;
  }

  static List<CallStatsReportSummaryResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <CallStatsReportSummaryResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = CallStatsReportSummaryResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'CallStatsReportSummaryResponse('
        'callCid: $callCid, '
        'callDurationSeconds: $callDurationSeconds, '
        'callSessionId: $callSessionId, '
        'callStatus: $callStatus, '
        'createdAt: $createdAt, '
        'firstStatsTime: $firstStatsTime, '
        'minUserRating: $minUserRating, '
        'qualityScore: $qualityScore, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is CallStatsReportSummaryResponse &&
        other.callCid == callCid &&
        other.callDurationSeconds == callDurationSeconds &&
        other.callSessionId == callSessionId &&
        other.callStatus == callStatus &&
        other.createdAt == createdAt &&
        other.firstStatsTime == firstStatsTime &&
        other.minUserRating == minUserRating &&
        other.qualityScore == qualityScore;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      callCid,
      callDurationSeconds,
      callSessionId,
      callStatus,
      createdAt,
      firstStatsTime,
      minUserRating,
      qualityScore,
    ]);
  }
}
