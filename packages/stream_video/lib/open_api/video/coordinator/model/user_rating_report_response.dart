// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class UserRatingReportResponse {
  const UserRatingReportResponse({
    required this.average,
    required this.count,
  });

  final num average;

  final int count;

  Map<String, dynamic> toJson() {
    return {
      'average': average,
      'count': count,
    };
  }

  static UserRatingReportResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return UserRatingReportResponse(
        average: mapValueOfType<num>(json, r'average')!,
        count: mapValueOfType<int>(json, r'count')!,
      );
    }
    return null;
  }

  static List<UserRatingReportResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <UserRatingReportResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = UserRatingReportResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'UserRatingReportResponse('
        'average: $average, '
        'count: $count, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is UserRatingReportResponse &&
        other.average == average &&
        other.count == count;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      average,
      count,
    ]);
  }
}
