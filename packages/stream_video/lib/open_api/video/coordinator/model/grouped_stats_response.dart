// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class GroupedStatsResponse {
  const GroupedStatsResponse({
    required this.name,
    required this.unique,
  });

  final String name;

  final int unique;

  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'unique': unique,
    };
  }

  static GroupedStatsResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return GroupedStatsResponse(
        name: mapValueOfType<String>(json, r'name')!,
        unique: mapValueOfType<int>(json, r'unique')!,
      );
    }
    return null;
  }

  static List<GroupedStatsResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <GroupedStatsResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = GroupedStatsResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'GroupedStatsResponse('
        'name: $name, '
        'unique: $unique, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is GroupedStatsResponse &&
        other.name == name &&
        other.unique == unique;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      unique,
    ]);
  }
}
