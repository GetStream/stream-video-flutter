// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings

part of openapi.api;

@immutable
class CallRequest {
  const CallRequest({
    this.channelCid,
    this.custom,
    this.members,
    this.settingsOverride,
    this.startsAt,
    this.team,
    this.video,
  });

  final String? channelCid;

  final Map<String, Object>? custom;

  final List<MemberRequest>? members;

  final CallSettingsRequest? settingsOverride;

  final DateTime? startsAt;

  final String? team;

  final bool? video;

  Map<String, dynamic> toJson() {
    return {
      'channel_cid': channelCid,
      'custom': custom,
      'members': members,
      'settings_override': settingsOverride,
      'starts_at': startsAt,
      'team': team,
      'video': video,
    };
  }

  static CallRequest? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return CallRequest(
        channelCid: mapValueOfType<String?>(json, r'channel_cid', null),
        custom: mapCastOfType<String, Object>(json, r'custom'),
        members: MemberRequest.listFromJson(json[r'members']),
        settingsOverride:
            CallSettingsRequest?.fromJson(json[r'settings_override'] ?? null),
        startsAt: mapValueOfType<DateTime?>(json, r'starts_at', null),
        team: mapValueOfType<String?>(json, r'team', null),
        video: mapValueOfType<bool?>(json, r'video', null),
      );
    }
    return null;
  }

  static List<CallRequest> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <CallRequest>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = CallRequest.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'CallRequest('
        'channelCid: $channelCid, '
        'custom: $custom, '
        'members: $members, '
        'settingsOverride: $settingsOverride, '
        'startsAt: $startsAt, '
        'team: $team, '
        'video: $video, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is CallRequest &&
        other.channelCid == channelCid &&
        other.custom == custom &&
        other.members == members &&
        other.settingsOverride == settingsOverride &&
        other.startsAt == startsAt &&
        other.team == team &&
        other.video == video;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      channelCid,
      custom,
      members,
      settingsOverride,
      startsAt,
      team,
      video,
    ]);
  }
}
