default_platform :ios
import "../../Fastfile"

default_platform(:ios)

before_all do
  if is_ci
    setup_ci()
  end
end

platform :ios do

  lane :archive do |options|
    method = options[:method]

    build_app(
      export_method: method,
      silent: true,
      clean: true,
      include_symbols: true,
      output_directory: "./dist",
    )
  end

  lane :build do |options|
    # Reuse parent fastfile tasks
    fetch_dependencies
    build_autogenerated_code


    sign_enabled = options[:sign_enabled] || false
    sign_param = sign_enabled ? '' : '--no-codesign'

    config_only = options[:config_only] || false
    config_param = config_only ? '--config-only' : ''

    sh_on_root(command: "flutter build ios --no-pub --suppress-analytics --release #{sign_param} #{config_param}")
  end

  lane :build_and_deploy do
    app_store_connect_api_key

    match(readonly: is_ci)

    current_build_number = app_store_build_number(live: false)
    
    increment_build_number(build_number: current_build_number + 1)

    build(sign_enabled: true)
    archive(method: "app-store")

    begin
      upload_to_testflight(
        distribute_external: true,
        notify_external_testers: true,
        groups: ['Internal Testers', 'External Testers'],
        changelog: "Lots of amazing new features to test out!",
        reject_build_waiting_for_review: false,
        skip_waiting_for_build_processing: false,
      )
    rescue Exception => e
      if e.message.include? "Another build is in review"
        UI.important("Another build is already in beta review. Skipping beta review submission")
      else
        UI.user_error!(e)
      end
    end
  end

  private_lane :appstore_api_key do
      @appstore_api_key ||= app_store_connect_api_key(
        key_id: 'MT3PRT8TB7',
        issuer_id: '69a6de96-0738-47e3-e053-5b8c7c11a4d1',
        key_filepath: '~/.ssh/appstore_api_key',
        in_house: false
      )
   end
  
  desc "If `readonly: true` (by default), installs all Certs and Profiles necessary for development and ad-hoc.\nIf `readonly: false`, recreates all Profiles necessary for development and ad-hoc, updates them locally and remotely."
  desc "If `register_device: false` (by default), no device registration.\nIf `register_device: true`, will register a new device."
  lane :match_me do |options|
    if options[:register_device]
      device_name = prompt(text: 'Enter the device name: ')
      device_udid = prompt(text: 'Enter the device UDID: ')
      register_device(
        name: device_name,
        udid: device_udid,
        api_key: appstore_api_key,
      )      
      options[:readonly] = false
    end
    app_identifiers = [
      'io.getstream.video.flutter.dogfooding',
      'io.getstream.video.flutter.dogfooding.ScreenSharing',
    ]
    %w[development adhoc appstore].each do |type|
      match(
        api_key: appstore_api_key,
        type: type,
        app_identifier: app_identifiers,
        readonly: options[:readonly],
        force_for_new_devices: false,
      )
    end
  end

end