name: stream_video_flutter_workflow

env:
  FLUTTER_CHANNEL: stable
  FLUTTER_VERSION: 3.29.0
  ENV_PROPERTIES: ${{ secrets.ENV_PROPERTIES }}

on:
  pull_request:
    paths:
      - "packages/**"
      - "dogfooding/**"
      - ".github/workflows/stream_video_flutter_workflow.yml"
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Tools
        run: |
          flutter pub global activate melos

      - name: Bootstrap Workspace
        run: melos postclean

      - name: Bootstrap Workspace
        run: melos bootstrap --verbose

      - name: Prepare environment
        run: |
          echo "${{ env.ENV_PROPERTIES }}" > .env &&
          melos run generate:all

        # TODO: Treat info and warning as error once all packages solve their issues.
      - name: Dart Analyze
        run: |
          melos run analyze:error

      - name: Check formatting
        run: |
          melos run format:verify

  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⚙️ Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Tools
        run: |
          flutter pub global activate melos

      - name: Bootstrap Workspace
        run: melos bootstrap --verbose

      - name: Prepare environment
        run: |
          echo "${{ env.ENV_PROPERTIES }}" > .env &&
          melos run generate:all

      - name: Build Example
        run: |
          melos run build:example:android
